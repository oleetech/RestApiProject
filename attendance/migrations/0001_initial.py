# Generated by Django 5.1.1 on 2024-10-22 05:29

import ckeditor.fields
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authentication', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Workday',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('MON', 'Monday'), ('TUE', 'Tuesday'), ('WED', 'Wednesday'), ('THU', 'Thursday'), ('FRI', 'Friday'), ('SAT', 'Saturday'), ('SUN', 'Sunday')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='authentication.company')),
            ],
            options={
                'unique_together': {('name', 'company')},
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(max_length=50, unique=True)),
                ('location', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('last_sync_time', models.DateTimeField(blank=True, null=True)),
                ('serial_number', models.CharField(max_length=255, null=True, unique=True)),
                ('port', models.IntegerField(default=4370)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='authentication.company')),
            ],
            options={
                'verbose_name': 'Device',
                'verbose_name_plural': 'Devices',
                'ordering': ['-last_sync_time'],
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(max_length=20, verbose_name='Employee ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name=' Name')),
                ('father_name', models.CharField(blank=True, max_length=50, null=True, verbose_name="Father's Name")),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], default='M', max_length=1)),
                ('contact_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='Contact Number')),
                ('local_address', models.TextField(blank=True, null=True, verbose_name='Local Address')),
                ('permanent_address', models.TextField(blank=True, null=True, verbose_name='Permanent Address')),
                ('reference_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Reference Name')),
                ('reference_phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Reference Phone')),
                ('designation', models.CharField(blank=True, max_length=50, null=True, verbose_name='Designation')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('On Leave', 'On Leave'), ('Suspended', 'Suspended'), ('Terminated', 'Terminated'), ('Resigned', 'Resigned')], default='Active', max_length=10, verbose_name='Status')),
                ('salary_type', models.CharField(choices=[('Monthly', 'Monthly'), ('Hourly', 'Hourly'), ('Contract', 'Contract')], max_length=20, verbose_name='Salary Type')),
                ('salary_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Salary Amount')),
                ('bank_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Bank Name')),
                ('bank_account_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Bank Account Number')),
                ('bank_ifsc_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Bank IFSC Code')),
                ('blood_group', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=3, null=True)),
                ('religion', models.CharField(blank=True, choices=[('Christianity', 'Christianity'), ('Islam', 'Islam'), ('Hinduism', 'Hinduism'), ('Buddhism', 'Buddhism'), ('Sikhism', 'Sikhism'), ('Judaism', 'Judaism'), ('Other', 'Other')], max_length=20, null=True)),
                ('marital_status', models.CharField(blank=True, choices=[('Single', 'Single'), ('Married', 'Married'), ('Divorced', 'Divorced'), ('Widowed', 'Widowed')], max_length=10, null=True)),
                ('date_of_joining', models.DateField(blank=True, null=True, verbose_name='Date of Joining')),
                ('email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='Email Address')),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Emergency Contact Name')),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Emergency Contact Phone')),
                ('emergency_contact_relationship', models.CharField(blank=True, max_length=50, null=True, verbose_name='Emergency Contact Relationship')),
                ('position', models.CharField(blank=True, max_length=50, null=True, verbose_name='Position Title')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_employees', to='authentication.company', verbose_name='Company')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='attendance.department', verbose_name='Department')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employees', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Employee',
                'verbose_name_plural': 'Employees',
                'ordering': ['date_of_joining'],
            },
        ),
        migrations.CreateModel(
            name='AttendanceLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('punch_datetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date & Time of Punch')),
                ('in_out_status', models.CharField(choices=[('IN', 'Check-In'), ('OUT', 'Check-Out'), ('BREAK_IN', 'Break-In'), ('BREAK_OUT', 'Break-Out')], default='IN', max_length=20, verbose_name='In/Out Status')),
                ('verification_method', models.CharField(choices=[('FP', 'Fingerprint'), ('FACE', 'Face'), ('CARD', 'Card'), ('PWD', 'Password'), ('GPS', 'GPS'), ('MANUAL', 'Manual')], default='FP', max_length=10, verbose_name='Verification Method')),
                ('punch_mode', models.CharField(choices=[('AUTO', 'Auto'), ('MANUAL', 'Manual')], default='AUTO', max_length=10, verbose_name='Punch Mode')),
                ('work_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Work Code')),
                ('sync', models.BooleanField(default=False)),
                ('locationName', models.CharField(blank=True, max_length=255, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attendance_logs', to='authentication.company')),
                ('device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='attendance.device')),
                ('employee', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='attendance.employee')),
            ],
            options={
                'verbose_name': 'Attendance Log',
                'verbose_name_plural': 'Attendance Logs',
                'ordering': ['-punch_datetime'],
            },
        ),
        migrations.CreateModel(
            name='EmployeeDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_name', models.CharField(max_length=100)),
                ('document_type', models.CharField(choices=[('Resume', 'Resume'), ('Contract', 'Contract'), ('ID Card', 'ID Card'), ('Other', 'Other')], max_length=20)),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('document_file', models.FileField(upload_to='employee_documents/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'docx', 'jpg', 'png'])])),
                ('employee', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='attendance.employee')),
            ],
            options={
                'verbose_name': 'Employee Document',
                'verbose_name_plural': 'Employee Documents',
                'ordering': ['upload_date'],
            },
        ),
        migrations.CreateModel(
            name='Holiday',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('reason', models.CharField(max_length=255)),
                ('company', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='authentication.company')),
            ],
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', ckeditor.fields.RichTextField()),
                ('target_type', models.CharField(choices=[('ALL', 'All Departments'), ('DEPT', 'Specific Departments'), ('USER', 'Specific Users')], default='ALL', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notices', to='authentication.company')),
                ('department', models.ManyToManyField(blank=True, related_name='notices', to='attendance.department')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_notices', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Shift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('break_duration', models.DurationField(blank=True, null=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive')], default='ACTIVE', max_length=10)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shifts', to='authentication.company')),
            ],
            options={
                'verbose_name': 'Shift',
                'verbose_name_plural': 'Shifts',
                'ordering': ['start_time'],
            },
        ),
        migrations.CreateModel(
            name='TemporaryShift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('company', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='temp_shifts', to='authentication.company')),
                ('employee', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='attendance.employee')),
                ('shift', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='attendance.shift')),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='authentication.company')),
                ('employee', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='attendance.employee')),
                ('shift', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='attendance.shift')),
                ('workdays', models.ManyToManyField(to='attendance.workday')),
            ],
        ),
        migrations.CreateModel(
            name='WorkHours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('total_hours', models.DurationField()),
                ('overtime_hours', models.DurationField(blank=True, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='authentication.company')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='attendance.employee')),
            ],
        ),
        migrations.AddConstraint(
            model_name='device',
            constraint=models.CheckConstraint(condition=models.Q(('port__gte', 1), ('port__lte', 65535)), name='check_valid_port_range'),
        ),
        migrations.AddConstraint(
            model_name='device',
            constraint=models.UniqueConstraint(fields=('company', 'ip_address'), name='unique_ip_per_company'),
        ),
        migrations.AddConstraint(
            model_name='employee',
            constraint=models.UniqueConstraint(fields=('company', 'employee_id'), name='unique_employee_per_company'),
        ),
        migrations.AddConstraint(
            model_name='employee',
            constraint=models.UniqueConstraint(fields=('contact_number',), name='unique_contact_number'),
        ),
        migrations.AddConstraint(
            model_name='employee',
            constraint=models.UniqueConstraint(fields=('email',), name='unique_email'),
        ),
        migrations.AddConstraint(
            model_name='employee',
            constraint=models.CheckConstraint(condition=models.Q(('date_of_birth__lt', models.F('date_of_joining'))), name='check_birth_before_joining'),
        ),
        migrations.AddConstraint(
            model_name='employee',
            constraint=models.CheckConstraint(condition=models.Q(('employee_id__regex', '^[a-zA-Z0-9]+$')), name='check_employee_id_alphanumeric'),
        ),
        migrations.AddConstraint(
            model_name='employee',
            constraint=models.CheckConstraint(condition=models.Q(('contact_number__regex', '^[0-9]+$')), name='check_contact_number_numeric'),
        ),
        migrations.AddConstraint(
            model_name='employee',
            constraint=models.CheckConstraint(condition=models.Q(('email__contains', '@')), name='check_valid_email'),
        ),
        migrations.AddConstraint(
            model_name='employee',
            constraint=models.CheckConstraint(condition=models.Q(('date_of_birth__gt', '1900-01-01')), name='check_valid_birth_date'),
        ),
        migrations.AddConstraint(
            model_name='attendancelog',
            constraint=models.UniqueConstraint(fields=('employee', 'punch_datetime'), name='unique_attendance_log_per_user_per_day_per_checkin'),
        ),
        migrations.AddConstraint(
            model_name='shift',
            constraint=models.UniqueConstraint(fields=('company', 'name'), name='unique_shift_per_company'),
        ),
    ]
